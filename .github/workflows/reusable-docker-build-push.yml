name: "Reusable docker build and push"

env:
  TZ: Asia/Tokyo

on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        default: "ghcr.io"
      registry-username:
        required: true
        type: string
      repo-owner:
        required: true
        type: string
      repo-name:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      go-version:
        required: false
        type: string
      go-version-file:
        required: false
        type: string
        description: "If both the `go-version` and the `go-version-file` inputs are provided then the `go-version` input is used."
      alpine-version:
        required: false
        type: string
      alpine-version-file:
        required: false
        type: string
        description: "If both the `alpine-version` and the `alpine-version-file` inputs are provided then the `alpine-version` input is used."

    secrets:
      READ_AND_WRITE_GHCR_TOKEN:
        required: true
      IMPORT_PRIVATE_REPO_GITHUB_TOKEN:
        required: false
    outputs:
      image:
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-output-image.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.READ_AND_WRITE_GHCR_TOKEN }}

      - name: Set current date and time as env variables
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "TIME=$(date +'%H%M%S')" >> $GITHUB_ENV

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ inputs.registry }}/${{ inputs.repo-owner }}/${{ inputs.repo-name }}
          tags: |
            type=sha,prefix=${{ env.DATE }}-${{ env.TIME }}-

      - name: Set GO_VERSION
        run: |
          echo "GO_VERSION=${{ inputs.go-version }}" >> $GITHUB_ENV
          if [ '${{ inputs.go-version }}' == '' ] && [ '${{ inputs.go-version-file }}' != '' ]; then
            echo "GO_VERSION=$(cat ${{ inputs.go-version-file }})" >> $GITHUB_ENV
          fi

      - name: Set ALPINE_VERSION
        run: |
          echo "ALPINE_VERSION=${{ inputs.alpine-version }}" >> $GITHUB_ENV
          if [ '${{ inputs.alpine-version }}' == '' ] && [ '${{ inputs.alpine-version-file }}' != '' ]; then
            echo "ALPINE_VERSION=$(cat ${{ inputs.alpine-version-file }})" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image and push it to GHCR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
            IMPORT_PRIVATE_REPO_GITHUB_TOKEN=${{ secrets.IMPORT_PRIVATE_REPO_GITHUB_TOKEN }}

      - id: set-output-image
        run: echo "image=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT
