name: "Reusable docker build and push"

env:
  TZ: Asia/Tokyo

on:
  workflow_call:
    inputs:
      registry:
        required: false
        type: string
        default: "ghcr.io"
      registry-username:
        required: true
        type: string
      repo-owner:
        required: true
        type: string
      repo-name:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
    secrets:
      READ_AND_WRITE_GHCR_TOKEN:
        required: false
      IMPORT_PRIVATE_REPO_GITHUB_TOKEN:
        required: false
    outputs:
      image:
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-output-image.outputs.image }}
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.READ_AND_WRITE_GHCR_TOKEN }}

      - name: Set current date and time as env variables
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "TIME=$(date +'%H%M%S')" >> $GITHUB_ENV

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ inputs.registry }}/${{ inputs.repo-owner }}/${{ inputs.repo-name }}
          tags: |
            type=sha,prefix=${{ env.DATE }}-${{ env.TIME }}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image and push it to GHCR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            IMPORT_PRIVATE_REPO_GITHUB_TOKEN=${{ secrets.IMPORT_PRIVATE_REPO_GITHUB_TOKEN }}

      - id: set-output-image
        run: echo "::set-output name=image::${{ steps.meta.outputs.tags }}"
